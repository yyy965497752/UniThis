//
// Cards
// -------------------------

/* Card */
.card {
	margin-bottom: $line-height-computed;
	border-radius: $border-radius-base;
	@include box-shadow($box-shadow-base);

	// Default card has white background. Alternate it with "bg-..." class
	&:not([class*="bg-"]) {
		background-color: #fff;
	}
}

/* Card links */
a.card {
	display: block;
	font-weight: inherit;

	&:not(.bg-inverse) {
		color: inherit;

		&:hover {
			color: inherit;
		}
	}
}

/* Card with table */
.card-table {
	width: 100%;

	td {
		padding: 10px;
		vertical-align: middle;
	}
}


/* Card header */
.card-header {
	display: table;
	width: 100%;
	margin: 0;
	padding: $card-spacer-y $card-spacer-x;
	border-bottom: 1px solid transparent;
	@include border-top-radius($border-radius-base);

	> * {
		margin: 0;
		display: table-cell;
		vertical-align: middle;
	}

	.card.text-center & > *,
	&.text-center > * {
		margin: 0 auto;
	}
}

/* Card actions bar */
.card-actions {
	float: right;
	line-height: $headings-line-height;
	margin-bottom: 0;
	margin-left: auto;
    padding: 0;
}

.card-actions > li {
	display: inline-block;
	padding: 0;

	> a:not(.label),
	> button {
		color: $text-muted;
		display: inline-block;
		padding: 0;
		line-height: 1;
		opacity: .7;
		vertical-align: middle;
		transition: opacity 0.15s ease-out;
		@include bg-inverse(#fff);

		&:hover {
			text-decoration: none;
			opacity: 1;
		}

		&:active {
			opacity: .6;
		}
	}

	> span {
		display: block;

		.card.card-themed > .card-header & {
			color: #fff;
		}
	}

	> .label {
		line-height: 1.25;
	}

	> a:focus {
		text-decoration: none;
		opacity: 1;
	}

	> button {
		background: none;
		border: none;
	}

	&.active > a,
	&.open > button {
		text-decoration: none;
		opacity: 1;
	}
}

.card-actions > li + li {
	margin-left: 10px;
}

/* Card actions */
.card.card-act-refresh {
	position: relative;

	&:before {
		position: absolute;
		content: '';
		display: block;
		left: 0;
		right: 0;
		top: 0;
		bottom: 0;
		background-color: rgba(255, 255, 255, .9);
		z-index: 1;
		@include animation(fadeIn .2s ease-out);
	}

	&:after {
		position: absolute;
		top: 50%;
		left: 50%;
		margin: -20px 0 0 -20px;
		width: 40px;
		height: 40px;
		line-height: 40px;
		color: $text-color;
		font-family: Ionicons;
		font-size: 18px;
		text-align: center;
		z-index: 2;
		content: "\f13d";
		@include animation(fa-spin 2s infinite linear);
	}

	.ie9 &:after {
		content: "Loading..";
	}
}

.card.card-act-fullscreen {
	position: fixed;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	z-index: 1040;
	margin-bottom: 0;
	overflow-y: auto;
	-webkit-overflow-scrolling: touch;
	backface-visibility: hidden;
}

.card.card-act-hidden {
	.card-block {
		display: none;
	}
}

/* Card block */
.card-block {
	padding: $card-spacer-y $card-spacer-x;

	&:first-child {
		@include border-top-radius($border-radius-base);
	}

	> :first-child,
	> .row:first-child > [class*="col-"] > :first-child {
		margin-top: 0;
	}

	> :last-child {
		margin-bottom: 0;
	}
}

.card-header + .card-block {
	padding-top: ($card-spacer-y / 1.5);
}

/* Card image */
.card-img {
	border-radius: $border-radius-base;
}

.card-img-overlay {
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	padding: 1.25rem;
}

/* Card image caps */
.card-img-top {
	border-radius: $border-radius-base $border-radius-base 0 0;
}

.card-img-bottom {
	border-radius: 0 0 $border-radius-base $border-radius-base;
}

/* Profile card (used in profile page) */
.card-profile-img {
	height: 240px;
}

.card-profile-block {
	position: relative;
}

.card-profile-block .img-avatar {
	border-radius: $border-radius-base * 2;
	margin-top: -$panel-body-padding;
	transform: translate(0, -50%);

	@media screen and (min-width: $screen-sm-min) {
		position: absolute;
		bottom: 24px;
		left: 24px;
		transform: none;
	}
}

.card-profile-block .profile-info {
	line-height: $headings-line-height;
	margin-top: -$panel-body-padding;

	@media screen and (min-width: $screen-sm-min) {
		margin-left: 120px;
		margin-top: 0;
	}
 }

 /* Card with nav tabs */
.card > .nav-tabs {
	border-bottom: none;
}

.card > .nav-tabs:not(.nav-stacked) {
	background-color: $gray-lighter-o;
}

.card > .nav-tabs:first-child {		
	@include border-top-radius($border-radius-base);
}

.card > .nav-tabs.nav-tabs-right > li {
	float: right;
}

.card > .nav-tabs > li {
	margin-bottom: 0;

	> a {
		margin-right: 0;
		border: 1px solid transparent !important;

		&:hover {
			color: $app-primary;
			background-color: transparent;
			border-color: transparent;
		}
	}

	&.active > a {
		&,
		&:hover,
		&:focus {
			background-color: #fff;
			@include box-shadow(inset 0 2px $app-primary);
		}

		&:hover,
		&:focus {
			color: inherit;
		}
	}

	&:not(.active) > a.inactive {
		color: $gray-dark;

		&:hover,
		&:focus {
			@include box-shadow(none);
		}
	}
}

.card > .nav-tabs:first-child > li > a {
	border-radius: 0;
}

.card > .nav-tabs:first-child > li:first-child > a {
	border-top-left-radius: $border-radius-base;
}

.card > .nav-tabs:first-child > li:last-child > a {
	border-top-right-radius: $border-radius-base;
}

.card > .nav-tabs.nav-tabs-alt {
	background-color: transparent;
	border-bottom: 1px solid $gray-lighter-o;
}

.card > .nav-tabs.nav-tabs-alt > li > a {
	margin-bottom: -1px;
	@include transition(all .15s ease-out);

	&:hover {
		@include box-shadow(inset 0 -2px $app-primary);
	}
}

.card > .nav-tabs.nav-tabs-alt > li.active > a {
	&,
	&:hover,
	&:focus {
		@include box-shadow(inset 0 -2px $app-primary);
	}
}

.card > .nav-tabs.nav-stacked {
	> li {
		&.active > a {
			&,
			&:hover,
			&:focus {			
				@include box-shadow(inset -2px 0 $app-primary);
			}
		}
	}
}

.card .card-block.tab-content {
	overflow: hidden;
}
 