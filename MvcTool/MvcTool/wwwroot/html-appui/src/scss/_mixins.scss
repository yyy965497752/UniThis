// Mixins
// Here you can overwrite Bootstrap mixins as well as add your own
// --------------------------------------------------

// Bootstrap mixins (overwrite)
// --------------------------------------------------

// Button variants (lighten hover state background and border colors)
@mixin button-variant($color, $background, $border) {
	color: $color;
	background-color: $background;
	border-color: $border;

	&:hover,
	&:focus,
	&.focus,
	&:active,
	&.active,
	.open > &.dropdown-toggle {
		color: $color;
		background-color: darken($background, 5.5%);
		border-color: darken($border, 4.75%);
	}
	&:active,
	&.active,
	.open > &.dropdown-toggle {
		background-image: none;
	}
	&.disabled,
	&[disabled],
	fieldset[disabled] & {
		&,
		&:hover,
		&:focus,
		&.focus,
		&:active,
		&.active {
		  background-color: $background;
			  border-color: $border;
		}
	}

	.badge {
		color: $background;
		background-color: $color;
	}
}

// Alerts
@mixin alert-variant($background, $border, $text-color) {
	background-color: $background;
	border-color: $gray-lighter;
	border-left: 3px solid $border;
	color: $text-color;
	&:before {
		background-color: $border;
	}
	hr {
		border-top-color: darken($border, 5%);
	}
	.alert-link {
		color: $text-muted;
		text-decoration: underline;
	}
}

// Contextual backgrounds (removed a:hover state)
@mixin bg-variant($parent, $color) {
	#{$parent} {
		background-color: $color;
	}
}

// App mixins
// --------------------------------------------------

// Button outline variant
@mixin button-outline-variant($color) {
	color: $color;
	background-image: none;
	background-color: transparent;
	border-color: $color;

	&:focus,
	&.focus,
	&:active,
	&.active,
	.open > &.dropdown-toggle {
		color: #fff;
		background-color: $color;
		border-color: $color;
	}
	&:hover,
	&:focus {
		color: #fff;
		background-color: $color;
		border-color: $color;
	}

	&.disabled,
	&:disabled,
	fieldset[disabled] & {
		&:focus,
		&.focus {
		}
		&:hover,
		&:focus {
			color: $color;
			background-color: transparent;
		}
	}
}


// Bg-inverse mixin for dark backgrounds. Makes text white
@mixin bg-inverse($color) {
	.bg-inverse & {
		color: $color;
	}
}

// Placeholders on dark backgrounds
@mixin bg-inverse-placeholder($color) {
	.bg-inverse & {
		@include placeholder($color);
	}
}


// Box-shadow mixins
@mixin shadow($depth: 1) {
	@if $depth == 0 {
		box-shadow: none;
	} @else if $depth == 1 {
		box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .07);
	} @else if $depth == 2 {
		box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .07);
	} @else if $depth == 3 {
		box-shadow: 0 10px 20px rgba(0, 0, 0, .19), 0 6px 6px rgba(0, 0, 0, .07);
	} @else if $depth == 4 {
		box-shadow: 0 14px 28px rgba(0, 0, 0, .25), 0 10px 10px rgba(0, 0, 0, .07);
	} @else if $depth == 5 {
		box-shadow: 0 19px 38px rgba(0, 0, 0, .30), 0 15px 12px rgba(0, 0, 0, .07);
	}
}


// Material style mixins
// --------------------------------------------------

// Material Form Inputs
@mixin form-control-material-focus-variant($color) {
	&:focus {
		@include box-shadow(0 2px 0 $color);

		+ label {
			color: $color;
		}

		~ .input-group-addon {
			color: $color;
			@include box-shadow(0 2px 0 $color);
		}
	}
}

@mixin form-control-material-state-variant($color) {
	> .form-control {
		@include box-shadow(0 1px 0 $color);

		&:focus {
			@include box-shadow(0 2px 0 $color);

			+ label {
				color: $color;
			}

			~ .input-group-addon {
				color: $color;
				@include box-shadow(0 2px 0 $color);
			}
		}

		& + label {
			color: $color;
		}

		~ .input-group-addon {
			color: $color;
			@include box-shadow(0 1px 0 $color);
		}
	}

	> .help-block {
		color: $color;
	}
}
